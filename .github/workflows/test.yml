name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [24.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: extension/package-lock.json

    - name: Install dependencies
      working-directory: ./extension
      run: npm ci

    - name: Run type checking
      working-directory: ./extension
      run: npm run check-types

    - name: Run tests
      working-directory: ./extension
      run: npm test

    - name: Run tests with coverage
      working-directory: ./extension
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./extension/coverage/lcov.info
        directory: ./extension/coverage/
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: extension/package-lock.json

    - name: Install dependencies
      working-directory: ./extension
      run: npm ci

    - name: Build extension
      working-directory: ./extension
      run: npm run package

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: vscode-extension
        path: extension/dist/

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: extension/package-lock.json

    - name: Install dependencies
      working-directory: ./extension
      run: npm ci

    - name: Run ESLint
      working-directory: ./extension
      run: npx eslint src --ext .ts

    - name: Check formatting
      working-directory: ./extension
      run: npx prettier --check src

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: extension/package-lock.json

    - name: Install dependencies
      working-directory: ./extension
      run: npm ci

    - name: Run security audit
      working-directory: ./extension
      run: npm audit --audit-level high
